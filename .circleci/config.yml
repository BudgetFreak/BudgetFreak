version: 2
jobs:
  java_build:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          key: v{{ .Environment.CACHE_TOKEN }}-dependencies-{{ checksum "gradle.properties" }}
      - restore_cache:
          key: v{{ .Environment.CACHE_TOKEN }}-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - run: ./gradlew resolveDependencies --stacktrace
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v{{ .Environment.CACHE_TOKEN }}-dependencies-{{ checksum "gradle.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v{{ .Environment.CACHE_TOKEN }}-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - run: ./gradlew check --stacktrace
      - run: ./gradlew build --stacktrace
      - persist_to_workspace:
          root: .
          paths: ./*
      - run:
          name: Collect test results
          command: |
            mkdir -p ~/server-test-results/
            find . -type f -regex "./server/.*/build/test-results/.*xml" -exec cp {} ~/server-test-results/ \;
          when: always
      - store_test_results:
          path: ~/server-test-results
      - store_artifacts:
          path: ~/server-test-results
  java_sonarqube:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - run:
          name: Set PR number (fix for missing envorinment variable)
          command: |
              echo "CIRCLE_PR_NUMBER: $CIRCLE_PR_NUMBER"
              echo "CIRCLE_PULL_REQUEST: $CIRCLE_PULL_REQUEST"
              echo 'export CIRCLE_PR_NUMBER="${CIRCLE_PR_NUMBER:-${CIRCLE_PULL_REQUEST##*/}}"' >> $BASH_ENV
              source $BASH_ENV
              echo "CIRCLE_PR_NUMBER: $CIRCLE_PR_NUMBER"
      - attach_workspace:
          at: .
      - restore_cache:
          key: v{{ .Environment.CACHE_TOKEN }}-dependencies-{{ checksum "gradle.properties" }}
      - restore_cache:
          key: v{{ .Environment.CACHE_TOKEN }}-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - run: ./gradlew sonarqube --stacktrace
  angular_check:
      working_directory: ~/repo
      docker:
        - image: circleci/node:6-browsers
      steps:
        - checkout
        - restore_cache:
            key: v{{ .Environment.CACHE_TOKEN }}-node-dependencies-{{ checksum "web/package.json" }}-{{ checksum "web/package-lock.json" }}
        - run:
            command: npm install
            working_directory: ~/repo/web
        - save_cache:
            key: v{{ .Environment.CACHE_TOKEN }}-node-dependencies-{{ checksum "web/package.json" }}-{{ checksum "web/package-lock.json" }}
            paths: web/node_modules
        - run:
            command: xvfb-run -a npm run test -- --single-run --no-progress --browser=ChromeNoSandbox
            working_directory: ~/repo/web
        - run:
            command: xvfb-run -a npm run e2e -- --no-progress --config=protractor-ci.conf.js
            working_directory: ~/repo/web
workflows:
  version: 2
  build_and_analze:
    jobs:
      - java_build
      - java_sonarqube:
          requires:
            - java_build
      - angular_check